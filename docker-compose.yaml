version: "3.8"

services:
  api-gateway:
    container_name: api_gateway
    depends_on:
    - eureka-server
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  identity-service:
    container_name: identity_service
    depends_on:
    - eureka-server
    - postgres-identity-service
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    ports:
      - "9999:9999"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_DATABASE_HOST=postgres-identity-service
      - SPRING_DATASOURCE_DATABASE_PORT=6000
      - SPRING_DATASOURCE_DATABASE_NAME=identity_service

  housing-category-service:
    container_name: housing_category_service
    depends_on:
    - eureka-server
    build:
      dockerfile: ./housing-category-service/Dockerfile
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "9002:9002"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  postgres-identity-service:
    restart: always
    image: postgres:14.8-alpine3.18
    container_name: airbnb_identity_service_db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: identity_service
    ports:
      - "6000:6000"
    command: -p 6000
    volumes:
      - ./tmp/postgres-data/identity-service:/var/lib/postgresql/data

  tempo:
    image: grafana/tempo
    container_name: tempo
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tmp/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./tmp/prometheus:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki
    container_name: loki
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1